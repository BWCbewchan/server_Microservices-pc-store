openapi: 3.0.0
info:
  title: Cart Service API
  description: |
    API for Shopping Cart Management
    
    ## Features
    - Cart management (create, read, update, delete)
    - Item management within cart
    - Cart summary and calculations
    
    ## Authentication
    All endpoints require JWT token in Authorization header
    
    ## Error Codes
    - 400: Bad Request
    - 401: Unauthorized
    - 404: Not Found
    - 500: Server Error
  version: 1.0.0
  contact:
    email: support@pcstore.com

servers:
  - url: http://localhost:4000
    description: Development server

tags:
  - name: Cart
    description: Shopping cart operations

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    CartItem:
      type: object
      properties:
        productId:
          type: string
          description: ID of the product
        quantity:
          type: integer
          minimum: 1
          description: Quantity of the product
        price:
          type: number
          description: Price per unit
        name:
          type: string
          description: Product name
        image:
          type: string
          description: Product image URL

    Cart:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        total:
          type: number
        status:
          type: string
          enum: [active, completed, abandoned]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CartSummary:
      type: object
      properties:
        itemCount:
          type: integer
        total:
          type: number

paths:
  /cart/{userId}:
    get:
      tags: [Cart]
      summary: Get user's cart
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Cart retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        404:
          description: Cart not found

  /cart/add:
    post:
      tags: [Cart]
      summary: Add item to cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [userId, productId, quantity, price, name]
              properties:
                userId:
                  type: string
                productId:
                  type: string
                quantity:
                  type: integer
                  minimum: 1
                price:
                  type: number
                name:
                  type: string
                image:
                  type: string
      responses:
        200:
          description: Item added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        400:
          description: Invalid input data

  /cart/update-quantity:
    put:
      tags: [Cart]
      summary: Update item quantity
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [userId, productId, quantity]
              properties:
                userId:
                  type: string
                productId:
                  type: string
                quantity:
                  type: integer
                  minimum: 1
      responses:
        200:
          description: Quantity updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        404:
          description: Cart or item not found

  /cart/remove:
    delete:
      tags: [Cart]
      summary: Remove item from cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [userId, productId]
              properties:
                userId:
                  type: string
                productId:
                  type: string
      responses:
        200:
          description: Item removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        404:
          description: Cart or item not found

  /cart/{userId}/clear:
    delete:
      tags: [Cart]
      summary: Clear entire cart
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Cart cleared successfully
        404:
          description: Cart not found

  /cart/{userId}/summary:
    get:
      tags: [Cart]
      summary: Get cart summary
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Cart summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartSummary'