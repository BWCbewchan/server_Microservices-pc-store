openapi: 3.0.0
info:
  title: PC Store Inventory Service API
  description: |
    ## Inventory Management System
    Microservice responsible for:
    - Real-time stock tracking
    - Inventory synchronization
    - Stock operations
    - Inventory reporting
  version: 1.0.1
  contact:
    name: PC Store Support
    email: support@pcstore.com

servers:
  - url: http://localhost:4000
    description: Development server
  - url: https://api.pcstore.com/inventory
    description: Production server

paths:
  /products:
    get:
      tags: [Inventory]
      summary: Get all products with stock info
      description: Retrieve product list from Product Service with inventory data
      responses:
        200:
          description: Successfully retrieved products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
        500:
          $ref: '#/components/responses/ServerError'

  /inventory:
    get:
      tags: [Inventory]
      summary: Get complete inventory
      responses:
        200:
          description: Inventory list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
        404:
          $ref: '#/components/responses/NotFound'

  /inventory/{productId}:
    get:
      tags: [Inventory]
      summary: Get inventory details by product ID
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Inventory details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
        404:
          $ref: '#/components/responses/NotFound'

  /inventory/bulk:
    post:
      tags: [Inventory]
      summary: Get bulk inventory data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productIds:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: Bulk inventory data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkStockResponse'

  /inventory/import/{productId}/{quantity}:
    post:
      tags: [Operations]
      summary: Import stock to inventory
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: quantity
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Stock updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
        400:
          $ref: '#/components/responses/BadRequest'
          
  /inventory/restore/{productId}/{quantity}:
    post:
      tags: [Operations]
      summary: Restore stock to inventory
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: quantity
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Stock restored successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  quantity:
                    type: integer
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

  /inventory/confirm:
    post:
      tags: [Operations]
      summary: Confirm order and update stock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderItem'
      responses:
        200:
          description: Stock updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        207:
          description: Partial success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  failedItems:
                    type: array
                    items:
                      type: object
                      properties:
                        success:
                          type: boolean
                        productId:
                          type: string
                        error:
                          type: string
        400:
          $ref: '#/components/responses/BadRequest'
          
  /inventory/sync:
    post:
      tags: [Synchronization]
      summary: Sync inventory with Product Service
      responses:
        200:
          description: Synchronization completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  updated:
                    type: integer
                  failed:
                    type: integer
        404:
          description: No products found to sync
        500:
          $ref: '#/components/responses/ServerError'
          
  /inventory/stats:
    get:
      tags: [Reports]
      summary: Get inventory statistics
      responses:
        200:
          description: Inventory statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalStock:
                    type: integer
        500:
          $ref: '#/components/responses/ServerError'

  /inventory/product/{productId}:
    get:
      tags: [Inventory]
      summary: Get product stock information
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Stock information
          content:
            application/json:
              schema:
                type: object
                properties:
                  inStock:
                    type: boolean
                  stockInInventory:
                    type: integer
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    Inventory:
      type: object
      properties:
        productId:
          type: string
          example: "ABC123"
        name:
          type: string
          example: "Gaming Laptop"
        quantity:
          type: integer
          example: 50
        lowStockThreshold:
          type: integer
          example: 5
        updatedAt:
          type: string
          format: date-time

    OrderItem:
      type: object
      required:
        - productId
        - quantity
      properties:
        productId:
          type: string
        quantity:
          type: integer
          minimum: 1

    BulkStockResponse:
      type: object
      properties:
        stocks:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              availableStock:
                type: integer
              lowStockAlert:
                type: boolean

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        errorCode:
          type: string
        message:
          type: string
        details:
          type: string
          
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description: 
          type: string
        price:
          type: number
        stock:
          type: integer

  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

tags:
  - name: Inventory
    description: Core inventory management
  - name: Operations
    description: Stock operations and transactions
  - name: Reports
    description: Inventory analytics and reporting
  - name: Synchronization
    description: Data synchronization