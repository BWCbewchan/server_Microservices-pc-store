openapi: 3.0.0
info:
  title: PC Store Authentication Service API
  description: API for user authentication and management
  version: 1.0.0
  contact:
    name: PC Store Support
    email: support@pcstore.com

servers:
  - url: http://localhost:3004
    description: Development server

paths:
  /auth/register:
    post:
      tags: [Authentication]
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid input
        409:
          description: Email already exists
        500:
          description: Server error

  /auth/login:
    post:
      tags: [Authentication]
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        401:
          description: Invalid credentials
        403:
          description: Account banned
        500:
          description: Server error

  /auth/verify:
    get:
      tags: [Authentication]
      summary: Verify JWT token
      security:
        - bearerAuth: []
      responses:
        200:
          description: Valid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  user:
                    $ref: '#/components/schemas/User'
        401:
          description: Invalid token

  /auth/profile:
    get:
      tags: [Profile]
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        200:
          description: User profile data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserRegistration:
      type: object
      required:
        - email
        - password
        - fullName
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        password:
          type: string
          format: password
          minLength: 6
          example: "password123"
        fullName:
          type: string
          example: "John Doe"
        phone:
          type: string
          example: "+84123456789"

    User:
      type: object
      properties:
        id:
          type: string
          example: "507f1f77bcf86cd799439011"
        email:
          type: string
          format: email
        fullName:
          type: string
        phone:
          type: string
        role:
          type: string
          enum: [user, admin, staff]
        status:
          type: string
          enum: [active, inactive, banned]
        createdAt:
          type: string
          format: date-time
        lastLogin:
          type: string
          format: date-time

tags:
  - name: Authentication
    description: User authentication endpoints
  - name: Profile
    description: User profile management