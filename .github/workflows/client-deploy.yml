name: Build and Deploy Client

on:
  push:
    branches:
      - main
    paths:
      - 'client/**'
      - '.github/workflows/client-deploy.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'client/**'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      
      - name: Install dependencies
        run: |
          cd client
          npm ci
      
      - name: Build client
        run: |
          cd client
          npm run build
        env:
          VITE_APP_API_GATEWAY_URL: ${{ secrets.API_GATEWAY_URL || 'http://localhost:3000' }}
      
      - name: Run linting
        run: |
          cd client
          npm run lint || echo "Linting issues found, but continuing build"
      
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            client/dist
            client/node_modules/.vite
          key: ${{ runner.os }}-vite-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vite-build-
      
      - name: Add build summary
        run: |
          echo "## Client Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ Build completed successfully" >> $GITHUB_STEP_SUMMARY
          
          echo "### Environment" >> $GITHUB_STEP_SUMMARY
          echo "* Node.js version: $(node -v)" >> $GITHUB_STEP_SUMMARY
          echo "* NPM version: $(npm -v)" >> $GITHUB_STEP_SUMMARY
          
          echo "### Build Stats" >> $GITHUB_STEP_SUMMARY
          cd client
          echo "* Build size: $(du -sh dist | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "* Number of files: $(find dist -type f | wc -l)" >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code again
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Restore build from cache
        uses: actions/cache@v3
        with:
          path: client/dist
          key: ${{ runner.os }}-vite-build-${{ github.sha }}
      
      - name: Deploy to static hosting
        run: |
          echo "Deploying to static hosting..."
          if [ -n "$NETLIFY_AUTH_TOKEN" ]; then
            npm install -g netlify-cli
            netlify deploy --dir=client/dist --prod
          else
            echo "Skipping actual deployment - no deployment token provided"
            echo "In a real scenario, this would deploy to your hosting service"
            ls -la client/dist
          fi
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      
      - name: Add deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          if [ -n "$NETLIFY_AUTH_TOKEN" ]; then
            echo "✅ Successfully deployed to production" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Simulated deployment only (no deployment tokens provided)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "📅 Deployment date: $(date)" >> $GITHUB_STEP_SUMMARY
