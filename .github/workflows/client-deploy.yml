name: Build and Deploy Client

on:
  push:
    branches:
      - main
      - ci/ci
    paths:
      - 'client/**'
      - '.github/workflows/client-deploy.yml'
  pull_request:
    branches:
      - main
      - ci/ci
    paths:
      - 'client/**'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      
      - name: Install dependencies
        run: |
          cd client
          npm ci
      
      - name: Build client
        run: |
          cd client
          npm run build
        env:
          VITE_APP_API_GATEWAY_URL: ${{ secrets.API_GATEWAY_URL || 'http://localhost:3000' }}
      
      - name: Run linting
        run: |
          cd client
          npm run lint || echo "Linting issues found, but continuing build"
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: client/dist
          retention-days: 1
      
      - name: Add build summary
        run: |
          echo "## Client Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ Build completed successfully" >> $GITHUB_STEP_SUMMARY
          
          echo "### Environment" >> $GITHUB_STEP_SUMMARY
          echo "* Node.js version: $(node -v)" >> $GITHUB_STEP_SUMMARY
          echo "* NPM version: $(npm -v)" >> $GITHUB_STEP_SUMMARY
          
          echo "### Build Stats" >> $GITHUB_STEP_SUMMARY
          cd client
          echo "* Build size: $(du -sh dist | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "* Number of files: $(find dist -type f | wc -l)" >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: client/dist
      
      - name: Verify build artifacts
        run: |
          if [ -d "client/dist" ]; then
            echo "✅ Build artifacts downloaded successfully"
            ls -la client/dist
          else
            echo "❌ Build artifacts missing"
            exit 1
          fi
      
      - name: Setup Node.js for deployment
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Deploy to Netlify
        id: netlify-deploy
        if: env.NETLIFY_AUTH_TOKEN != ''
        run: |
          npm install -g netlify-cli
          echo "Deploying to Netlify..."
          DEPLOY_OUTPUT=$(netlify deploy --dir=client/dist --prod --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID --json)
          DEPLOY_URL=$(echo $DEPLOY_OUTPUT | grep -o '"url":"[^"]*"' | sed 's/"url":"//g' | sed 's/"//g')
          echo "deploy_url=$DEPLOY_URL" >> $GITHUB_OUTPUT
          echo "✅ Deployed to: $DEPLOY_URL"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      
      - name: Alternative deployment procedure
        if: env.NETLIFY_AUTH_TOKEN == ''
        run: |
          echo "No Netlify credentials provided. In a production environment, you would deploy here."
          echo "You can add NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID secrets to enable deployment."
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      
      - name: Add deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ steps.netlify-deploy.outputs.deploy_url }}" ]; then
            echo "✅ Successfully deployed to: [${{ steps.netlify-deploy.outputs.deploy_url }}](${{ steps.netlify-deploy.outputs.deploy_url }})" >> $GITHUB_STEP_SUMMARY
          elif [ -n "$NETLIFY_AUTH_TOKEN" ]; then
            echo "⚠️ Deployment attempted but URL wasn't captured" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ Deployment skipped (no credentials provided)" >> $GITHUB_STEP_SUMMARY
            echo "To enable deployment, add NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID secrets" >> $GITHUB_STEP_SUMMARY
          fi
          echo "📅 Deployment completed: $(date)" >> $GITHUB_STEP_SUMMARY
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
