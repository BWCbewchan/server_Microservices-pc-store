name: Build and Deploy Microservices

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
      - 'backend/docker-compose.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Create .env file
        run: |
          cd backend
          echo "PORT=3000" >> .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_EXPIRES_IN=7d" >> .env
      
      - name: Build and deploy with Docker Compose
        run: |
          cd backend
          docker-compose build
          docker-compose up -d
      
      - name: Verify deployment
        run: |
          cd backend
          # Wait for services to start
          sleep 30
          # Check if API Gateway is running
          curl -s http://localhost:3000/api-status || echo "API Gateway not responding"
          # List running containers
          docker-compose ps
      
      - name: Run integration tests
        run: |
          cd backend
          # Add integration tests here if applicable
          echo "Running integration tests"
      
      - name: Cleanup Docker resources
        if: always()
        run: |
          cd backend
          docker-compose logs
          docker-compose down
      
      - name: Notify on success
        if: success()
        run: echo "Deployment successful! All microservices are running."
      
      - name: Notify on failure
        if: failure()
        run: echo "Deployment failed. Check the logs for details."
