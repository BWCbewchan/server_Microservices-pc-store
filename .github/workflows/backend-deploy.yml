name: Build and Deploy Microservices

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
      - 'backend/docker-compose.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Setup Docker Compose
      - name: Set up Docker Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: v2.3.3  # Specify the version you want to use
      
      # Cache Docker layers to speed up builds
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      # Optional Docker Hub Login - only if secrets are available
      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' && env.DOCKER_HUB_USERNAME != '' && env.DOCKER_HUB_TOKEN != '' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      # Create .env file with default values if secrets not available
      - name: Create .env file
        run: |
          cd backend
          echo "PORT=3000" >> .env
          echo "MONGO_URI=${MONGO_URI:-mongodb://localhost:27017/pcstore}" >> .env
          echo "JWT_SECRET=${JWT_SECRET:-localdevelopmentsecret}" >> .env
          echo "JWT_EXPIRES_IN=7d" >> .env
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
      
      # Use docker compose without hyphen (new format)
      - name: Build and deploy with Docker Compose
        run: |
          cd backend
          docker compose version
          docker compose build
          docker compose up -d
      
      # Verify with fallback message
      - name: Verify deployment
        run: |
          cd backend
          # Wait for services to start
          sleep 15
          # Check if API Gateway is running
          echo "Checking API Gateway status..."
          curl -s http://localhost:3000/api-status || echo "API Gateway not responding"
          # List running containers
          echo "Running containers:"
          docker ps
      
      # Simplified cleanup with log output to step summary instead of artifact upload
      - name: Cleanup Docker resources
        if: always()
        run: |
          cd backend
          docker compose ps
          echo "Collecting container logs..."
          # Instead of saving to a file, capture a limited amount of logs
          echo "## Docker Logs (last 100 lines per container)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          docker compose logs --tail=100 >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "Stopping containers..."
          docker compose down || true
      
      # Remove the problematic artifact upload step and output status directly
      - name: Report deployment status
        if: always()
        run: |
          echo "## Deployment Results" >> $GITHUB_STEP_SUMMARY
          echo "* Container Status Before Cleanup:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          docker ps -a >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          
          echo "* Network Status:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          docker network ls >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          
          if [ ${{ job.status }} == "success" ]; then
            echo "✅ **Deployment completed successfully**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Deployment failed**" >> $GITHUB_STEP_SUMMARY
          fi
