{
  "openapi": "3.0.0",
  "info": {
    "title": "Order Service API",
    "description": "API for managing orders in the PC Store microservices architecture",
    "version": "1.0.0",
    "contact": {
      "email": "support@pcstore.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:4009",
      "description": "Order Service Direct"
    },
    {
      "url": "http://localhost:3000/api/orders",
      "description": "Order Service via API Gateway"
    }
  ],
  "tags": [
    {
      "name": "Orders",
      "description": "Order management endpoints"
    }
  ],
  "paths": {
    "/create": {
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order (JSON body)",
        "description": "Creates a new order with the provided information in request body - Recommended method",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "ID of the user placing the order"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Nguyen Van A"
                      },
                      "address": {
                        "type": "string",
                        "example": "123 Nguyen Hue, District 1, HCMC"
                      },
                      "phone": {
                        "type": "string",
                        "example": "0901234567"
                      },
                      "email": {
                        "type": "string",
                        "example": "nguyenvana@example.com"
                      }
                    }
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OrderItem"
                    }
                  },
                  "shipping": {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "example": "standard"
                      },
                      "fee": {
                        "type": "number",
                        "example": 30000
                      },
                      "status": {
                        "type": "string",
                        "enum": ["processing", "shipped", "delivered"],
                        "example": "processing"
                      },
                      "trackingNumber": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "payment": {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "example": "cod"
                      },
                      "status": {
                        "type": "string",
                        "enum": ["pending", "paid", "failed"],
                        "example": "pending"
                      }
                    }
                  },
                  "finalTotal": {
                    "type": "number",
                    "example": 3015.97
                  },
                  "notes": {
                    "type": "object",
                    "properties": {
                      "customerNote": {
                        "type": "string",
                        "example": "Gọi trước khi giao hàng"
                      },
                      "sellerNote": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  }
                },
                "required": ["userId", "customer", "items", "shipping", "payment", "finalTotal"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Đơn hàng đã được tạo"
                    },
                    "order": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or insufficient inventory",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Dữ liệu không hợp lệ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi server"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/create/{userId}/{customer}/{items}/{shipping}/{payment}/{finalTotal}/{notes}": {
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order (URL params)",
        "description": "Creates a new order with the provided information via URL parameters. This method is deprecated, use the JSON body method instead.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user placing the order"
          },
          {
            "name": "customer",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JSON string containing customer information (name, address, phone, email)"
          },
          {
            "name": "items",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JSON string containing items information (productId, name, quantity, price)"
          },
          {
            "name": "shipping",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JSON string containing shipping details (method, fee, status, trackingNumber)"
          },
          {
            "name": "payment",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JSON string containing payment details (method, status)"
          },
          {
            "name": "finalTotal",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "Total amount for the order"
          },
          {
            "name": "notes",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JSON string containing any notes (customerNote, sellerNote)"
          }
        ],
        "responses": {
          "200": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Đơn hàng đã được tạo"
                    },
                    "order": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or insufficient inventory",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Dữ liệu không hợp lệ"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi server"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{orderId}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order by ID",
        "description": "Retrieves order details by order ID",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the order to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Không tìm thấy đơn hàng"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi server"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get user orders",
        "description": "Retrieves all orders for a specific user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi server"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get all orders (Admin)",
        "description": "Retrieves all orders in the system. Admin access required.",
        "responses": {
          "200": {
            "description": "List of all orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi server"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/update/{orderId}/{updateData}": {
      "put": {
        "tags": ["Orders"],
        "summary": "Update order (Admin)",
        "description": "Updates an order with the provided data. Admin access required.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the order to update"
          },
          {
            "name": "updateData",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JSON string containing update data"
          }
        ],
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Đơn hàng đã được cập nhật"
                    },
                    "order": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Dữ liệu update không hợp lệ"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Đơn hàng không tồn tại"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi server"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cancel/{orderId}": {
      "post": {
        "tags": ["Orders"],
        "summary": "Cancel order",
        "description": "Cancels an order if it's in pending status",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the order to cancel"
          }
        ],
        "responses": {
          "200": {
            "description": "Order cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Đơn hàng đã bị hủy"
                    },
                    "order": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Order can't be cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Chỉ đơn hàng chưa xác nhận mới có thể hủy"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Đơn hàng không tồn tại"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi server"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/cancel/{orderId}": {
      "post": {
        "tags": ["Orders"],
        "summary": "Admin cancel order",
        "description": "Cancels an order by admin (any status)",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the order to cancel"
          }
        ],
        "responses": {
          "200": {
            "description": "Order cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Đơn hàng đã được hủy bởi Admin; tồn kho và Product Service đã được restore"
                    },
                    "order": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Đơn hàng không tồn tại"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi server"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/delete/{orderId}": {
      "delete": {
        "tags": ["Orders"],
        "summary": "Admin delete order",
        "description": "Permanently deletes an order (admin only)",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the order to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Đơn hàng đã được xóa bởi Admin"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Đơn hàng không tồn tại"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lỗi server"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "OrderItem": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "name": {
            "type": "string",
            "example": "ASUS ROG Strix G15"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "example": 2
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 1499.99
          }
        },
        "required": ["productId", "name", "quantity", "price"]
      },
      "Order": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "userId": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "customer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Nguyen Van A"
              },
              "address": {
                "type": "string",
                "example": "123 Nguyen Hue, District 1, HCMC"
              },
              "phone": {
                "type": "string",
                "example": "0901234567"
              },
              "email": {
                "type": "string",
                "example": "nguyenvana@example.com"
              }
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "shipping": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "example": "standard"
              },
              "fee": {
                "type": "number",
                "example": 15.99
              },
              "status": {
                "type": "string",
                "enum": ["processing", "shipped", "delivered"],
                "example": "processing"
              },
              "trackingNumber": {
                "type": "string",
                "example": "VN12345678"
              }
            }
          },
          "payment": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "example": "cod"
              },
              "status": {
                "type": "string",
                "enum": ["pending", "paid", "failed"],
                "example": "pending"
              }
            }
          },
          "finalTotal": {
            "type": "number",
            "example": 3015.97
          },
          "notes": {
            "type": "object",
            "properties": {
              "customerNote": {
                "type": "string",
                "example": "Gọi trước khi giao hàng"
              },
              "sellerNote": {
                "type": "string",
                "example": "Đóng gói cẩn thận"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "completed", "cancelled"],
            "example": "pending"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T16:20:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T16:20:00Z"
          }
        }
      }
    }
  }
}
